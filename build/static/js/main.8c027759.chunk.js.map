{"version":3,"sources":["stores/UserStore.js","extras/InputField.js","extras/SubmitButton.js","constants.js","extras/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","url","LoginFrom","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","constants","concat","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","LoginForm","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c027759.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\n\n// User store\n\nclass UserStore {\n\tconstructor() {\n\t\textendObservable(this, {\n\n\t\t\tloading: true,\n\t\t\tisLoggedIn: false,\n\t\t\tusername: ''\n\n\t\t})\n\t}\n\n}\n\nexport default new UserStore();","import React from 'react';\n\nclass InputField extends React.Component {\n  render() {\n    return (\n      <div className=\"inputField\">\n        \n        <input\n          className='input'\n          type={ this.props.type }\n          placeholder={ this.props.placeholder }\n          value={ this.props.value }\n          onChange={ (e) => this.props.onChange(e.target.value) }\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","import React from 'react';\n\nclass SubmitButton extends React.Component {\n  render() {\n    return (\n      <div className=\"submitButton\">\n        <button \n          className='btn'\n          disabled={this.props.disabled}\n          onClick= { () => this.props.onClick() }\n        >\n          { this.props.text }\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","export const url = 'http://localhost:8080'","import React          from 'react';\nimport InputField     from './InputField';\nimport SubmitButton   from './SubmitButton';\nimport UserStore      from '../stores/UserStore';\nimport * as constants from '../constants';\n\nclass LoginFrom extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // this.setState(state => ({...state, username: '', password: '', buttonDisabled: false}));\n    this.state = ({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 40) {\n      return;\n    }\n    // this.setState(state => ({...state, property: val}));\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState(state => ({...state, username: '', password: '', buttonDisabled: false}));\n\n    // this.state = ({\n    //   username: '',\n    //   password: '',\n    //   buttonDisabled: false\n    // });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState(state => ({...state, buttonDisabled: true}));\n    // this.setState({\n    //   buttonDisabled: true\n    // })\n\n    try {\n\n      let res = await fetch(constants.url.concat('/login'), {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && !result.success) {\n        this.resetForm();\n        alert(result.msg);\n      }\n\n\n    } catch(e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        Log in\n        \n         <InputField \n          type='email'\n          placeholder='Username'\n          value={this.state.username ? this.state.username : ''}\n          onChange={ (val) => this.setInputValue('username', val) }\n        />\n\n        <InputField \n          type='password'\n          placeholder='Password'\n          value={this.state.password ? this.state.password : ''}\n          onChange={ (val) => this.setInputValue('password', val) }\n        />\n\n        <SubmitButton \n          text='Login'\n          disabled={this.state.buttonDisabled}\n          onClick={ () => this.doLogin() }\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginFrom;\n","import React          from 'react';\nimport { observer }   from 'mobx-react';\nimport UserStore      from './stores/UserStore';\nimport LoginForm      from './extras/LoginForm';\nimport SubmitButton   from './extras/SubmitButton';\nimport * as constants from './constants';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try {\n\n      let res = await fetch(constants.url.concat('/isLoggedIn'), {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    }\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n\n      let res = await fetch(constants.url.concat('/logout'), {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n\n    }\n    catch(e) {\n      console.log(e);\n    }\n  }\n\n\n  render() {\n\n    if (UserStore.loading) {\n      \n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, Please wait...\n          </div>\n        </div>\n      );\n    \n    } else {\n\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Welcome {UserStore.username}\n\n              <SubmitButton \n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout() }\n              />\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            <LoginForm />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}